apply plugin: 'com.android.library'


android {
    compileSdkVersion 23
    buildToolsVersion "23.0.1"

    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile "com.android.support:support-annotations:23.1.0"
}

apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

group = 'net.petitviolet.android'
version = '0.4.0'
def siteUrl = 'https://github.com/petitviolet/android-monad'
def gitUrl = 'https://github.com/petitviolet/android-monad.git'

def bintrayProps = new Properties()
def bintrayFile = new File("bintray.gradle")
if (bintrayFile.exists()) {
    bintrayProps.load(new FileInputStream("bintray.gradle"))
} else {
    bintrayProps.load(new FileInputStream("bintray.gradle.skelton"))
}

bintray {
    user = bintrayProps["bintray_user"]
    key = bintrayProps["bintray_api_key"]

    configurations = ['archives'] //When uploading configuration files
    pkg {
        repo = 'maven'
        name = 'android-monad'
        desc = 'Monadic data structures like Scala'
        websiteUrl = siteUrl
        issueTrackerUrl = 'https://github.com/petitviolet/android-monad/issues'
        vcsUrl = gitUrl
        licenses = ['Apache-2.0']
        labels = ['android']
        publicDownloadNumbers = true
    }
}

install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'aar'
                name 'android-monad'
                url siteUrl
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'petitviolet'
                        name 'Hiroki Komurasaki'
                        email 'violethero0820@gmail.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}

task findConventions << {
    println project.getConvention()
}
